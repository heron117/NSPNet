MODEL:
  VID:
    ENABLE: True  # 启用视频检测功能
    METHOD: "cvc_stft"  # 使用的STFT方法
    STFT:
      MIN_OFFSET: -9  # 训练时的最小帧偏移
      MAX_OFFSET: 9  # 训练时的最大帧偏移
      TRAIN_REF_NUM: 2  # 训练时使用的参考帧数量
      #每次训练不会处理所有视频的所有帧，而是通过小批次的方式加载和处理一部分视频帧。在每个训练迭代中，视频帧是分批处理的，并且可能会混合来自不同视频的帧，取决于 DATASETS 中的数据加载器如何实现数据采样和处理。
      TEST_REF_NUM: 10  # 测试时使用的参考帧数量
  META_ARCHITECTURE: "GeneralizedRCNNSTFT"  # 使用的模型架构
  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-50"  # 预训练模型的路径
  RPN_ONLY: True  # 仅使用区域提案网络 (RPN)
  FCOS_ON: True  # 启用FCOS (Fully Convolutional One-Stage Object Detection)
  STFT_ON: True  # 启用STFT（短时傅里叶变换）
  BACKBONE:
    CONV_BODY: "R-50-FPN-RETINANET"  # 使用的骨干网络是ResNet-50与FPN结合的RetinaNet
  RESNETS:
    BACKBONE_OUT_CHANNELS: 256  # ResNet骨干网络输出的通道数
    STAGE_WITH_DCN: (False, True, True, True)  # 在哪些阶段使用可变形卷积网络（DCN）
    WITH_MODULATED_DCN: False  # 是否使用调制的可变形卷积
    DEFORMABLE_GROUPS: 1  # 可变形卷积的组数
    STAGE_WITH_GCB: (False, True, True, True)  # 在哪些阶段使用全局上下文块（GCB）
  RETINANET:
    USE_C5: False  # RetinaNet中是否使用C5层
  FCOS:
    NUM_CLASSES: 2  # FCOS的类别数量
    FPN_STRIDES: [8, 16, 32, 64, 128]  # FCOS的FPN层的步幅
    INFERENCE_TH: 0.05  # 推理时的置信度阈值
    NMS_TH: 0.6  # 非极大值抑制（NMS）的阈值
    PRE_NMS_TOP_N: 1000  # NMS前保留的最高得分的检测数量
    NORM_REG_TARGETS: True  # 是否归一化回归目标
    CENTERNESS_ON_REG: True  # 是否在回归分支上应用centerness
    CENTER_SAMPLING_RADIUS: 1.5  # 中心采样半径
    IOU_LOSS_TYPE: "giou"  # 使用GIoU作为损失函数
  STFT:
    OFFSET_WEIGHT_STD: 0.01  # 偏移量的标准差
    IOU_THRESH: 0.1  # IoU阈值
    BBOX_STD: [0.5, 0.5, 0.5, 0.5]  # 边界框的标准差
    REG_BETA: 0.11  # 回归损失的β值
DATASETS:
  TRAIN: ("ASUVideo_train_videos",)  # 训练集
  TEST: ("ASUVideo_val_videos",)  # 测试集，包含2098帧，子目录包括['4','24','68','70']
INPUT:
  MIN_SIZE_TRAIN: (800,)  # 训练时的最小尺寸
  MAX_SIZE_TRAIN: 1333  # 训练时的最大尺寸
  MIN_SIZE_TEST: 800  # 测试时的最小尺寸
  MAX_SIZE_TEST: 1333  # 测试时的最大尺寸
DATALOADER:
  SIZE_DIVISIBILITY: 32  # 数据加载器的尺寸可整除性 图像大小应当可以被32整除
SOLVER:
  BASE_LR: 0.0005  # 基础学习率
  WEIGHT_DECAY: 0.0001  # 权重衰减系数
  IMS_PER_BATCH: 4  # 每批图像的数量   如果每批只处理4张图片,那么训练2000次足以完成15000张图片的训练吗?
  #对于训练集,模型会分批次逐步进行处理,并不是一次性加载所有的视频帧,在每个批次中,会从指定的训练集中随机选取帧,这使得训练的多个迭代中,不同的视频序列可能分别被处理
  WARMUP_METHOD: "linear"  # 学习率预热方法
  WARMUP_ITERS: 500  # 学习率预热的迭代次数
  CHECKPOINT_PERIOD: 125  # 检查点保存周期
  TEST_PERIOD: 125  # 测试周期
  MAX_ITER: 2000  # 最大迭代次数
  LR_TYPE: "step"  # 学习率衰减类型
  GAMMA: 0.5  # 学习率衰减系数
  STEPS: (500, 1000, 1500)  # 学习率衰减的迭代步数
TEST:
  IMS_PER_BATCH: 4  # 测试时每批图像的数量
  DETECTIONS_PER_IMG: 300  # 每张图像的最大检测数
DATALOADER:
  NUM_WORKERS: 4  # 数据加载器的工作线程数量